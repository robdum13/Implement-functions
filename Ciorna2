#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <sstream>
#include <Windows.h>

struct Item {
    int ParentFolderID;
    int ItemID;
    char ItemType;
    std::string ItemName;
    std::string Content;
};

std::vector<Item> readContentDescriptor(const std::string& filePath) {
    std::vector<Item> items;
    std::ifstream file(filePath);

    if (!file.is_open()) {
        std::cerr << "Error: Unable to open file " << filePath << std::endl;
        return items;
    }

    std::string line;
    while (std::getline(file, line)) {
        // Skip header and empty lines
        if (line.empty() || line.find("Possible item types:") != std::string::npos) {
            continue;
        }

        Item item;
        std::stringstream ss(line);
        std::string temp;

        // Read each field from the line
        std::getline(ss, temp, '|');
        item.ParentFolderID = std::stoi(temp);

        std::getline(ss, temp, '|');
       
